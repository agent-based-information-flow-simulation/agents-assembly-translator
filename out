import random as r
import spade
from numpy.random import normal


class average_user(spade.agent.Agent):
    def __init__(self, jid, password, location, connections):
        super().__init__(jid, password, verify_security=False)
        self.minutes_spent_daily_on_youtube = 205.7
        self.fakenews_susceptibility = normal(15, 32)
        self.prefered_website = r.choices(["facebook", "twitter"], [100, 0])[0]
        self.is_online = r.choices(["yes", "no"], [95, 5])[0]
        self.friends = []
        self.spam = []
    
    def setup(self):
        self.add_behaviour(self.setup_agent())
    
    class setup_agent(spade.behaviour.OneShotBehaviour):
        async def check_minutes_spent_daily_on_youtube(self):
            threshold = 100
            num_connections = self.agent.connCount
            if self.agent.minutes_spent_daily_on_youtube > threshold:
                self.agent.fakenews_susceptibility *= num_connections
            if self.agent.minutes_spent_daily_on_youtube <= threshold:
                self.agent.fakenews_susceptibility -= num_connections
                temp_var = 2137
                if self.agent.fakenews_susceptibility > temp_var:
                    self.agent.fakenews_susceptibility *= num_connections
            tmp = 0
            if tmp > 10:
                a = 0
            if tmp >= 10:
                a = 0
            if tmp < 10:
                a = 0
            if tmp <= 10:
                a = 0
            if tmp == 10:
                a = 0
            if tmp != 10:
                a = 0
            while tmp > 10:
                a = 0
            while tmp >= 10:
                a = 0
            while tmp < 10:
                a = 0
                tmp *= 2
            while tmp <= 10:
                a = 0
                tmp += 1
            while tmp == 10:
                a = 0
                tmp -= 1
            while tmp != 10:
                a = 0
                tmp /= 2
        
        async def find_100th_prime(self):
            num_found = 0
            curr = 1
            while num_found <= 100:
                divisor = curr
                divisor -= 1
                num_divisors = 0
                while divisor > 1:
                    curr_copy = curr
                    while curr_copy > 0:
                        curr_copy -= divisor
                    if curr_copy == 0:
                        num_divisors += 1
                    divisor -= 1
                if num_divisors == 0:
                    num_found += 1
                curr += 1
            prime_100th = curr
        
        async def run(self):
            await self.check_minutes_spent_daily_on_youtube()
            await self.find_100th_prime()
